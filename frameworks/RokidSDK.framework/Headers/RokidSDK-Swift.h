// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef ROKIDSDK_SWIFT_H
#define ROKIDSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuickLook;
@import RKCooperationCore;
@import RKIMCore;
@import SceneKit;
@import UIKit;
#endif

#import <RokidSDK/RokidSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RokidSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



SWIFT_CLASS("_TtC8RokidSDK3Dev")
@interface Dev : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class NSString;

SWIFT_CLASS("_TtC8RokidSDK8NotiName")
@interface NotiName : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contactMgrDidRefresh;)
+ (NSString * _Nonnull)contactMgrDidRefresh SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull joinMeeting;)
+ (NSString * _Nonnull)joinMeeting SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inviteUser;)
+ (NSString * _Nonnull)inviteUser SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelOnParticipantJoin;)
+ (NSString * _Nonnull)mediaChannelOnParticipantJoin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelOnJoinSuccess;)
+ (NSString * _Nonnull)mediaChannelOnJoinSuccess SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull onRoomFullScreen;)
+ (NSString * _Nonnull)onRoomFullScreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull offRoomFullScreen;)
+ (NSString * _Nonnull)offRoomFullScreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelStateChange;)
+ (NSString * _Nonnull)mediaChannelStateChange SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull meetingError;)
+ (NSString * _Nonnull)meetingError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull takeSnapshot;)
+ (NSString * _Nonnull)takeSnapshot SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull onRemoteRecord;)
+ (NSString * _Nonnull)onRemoteRecord SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull applicationWillTerminate;)
+ (NSString * _Nonnull)applicationWillTerminate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull IMGoInviteMemeberVC;)
+ (NSString * _Nonnull)IMGoInviteMemeberVC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull loginSuccess;)
+ (NSString * _Nonnull)loginSuccess SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull loginFail;)
+ (NSString * _Nonnull)loginFail SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC8RokidSDK17RKARImageToolView")
@interface RKARImageToolView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKAuthInfo")
@interface RKAuthInfo : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull authorization;)
+ (NSString * _Nonnull)authorization SWIFT_WARN_UNUSED_RESULT;
+ (void)setAuthorization:(NSString * _Nonnull)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKBaseCell")
@interface RKBaseCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKBaseTableView")
@interface RKBaseTableView : UITableView
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end

@class NSBundle;

SWIFT_CLASS("_TtC8RokidSDK20RKBaseViewController")
@interface RKBaseViewController : UIViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)leftBarButtonItemAction;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKCallAlertView")
@interface RKCallAlertView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK26RKChatDetailViewController")
@interface RKChatDetailViewController : RKBaseViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)setupView;
@property (nonatomic) BOOL isClose;
/// 是否是闭环群聊
@property (nonatomic, copy) NSString * _Nullable groupId;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIImagePickerController;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end

@class QLPreviewController;
@protocol QLPreviewItem;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <QLPreviewControllerDataSource, QLPreviewControllerDelegate>
- (NSInteger)numberOfPreviewItemsInPreviewController:(QLPreviewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
- (id <QLPreviewItem> _Nonnull)previewController:(QLPreviewController * _Nonnull)controller previewItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end



@class RKIMMessage;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <RKIMDelegate>
- (void)didOpen;
- (void)messageWithDidReceiveSystemMessage:(RKIMMessage * _Nonnull)message;
- (void)messageWithDidReceiveNormalMessage:(RKIMMessage * _Nonnull)message;
@end

@class NSIndexPath;
@class UIScrollView;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



@class RKChatView;

SWIFT_CLASS("_TtC8RokidSDK24RKChatListViewController")
@interface RKChatListViewController : RKBaseViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
/// 是否是闭环群聊
- (void)loadData:(BOOL)isNeedLoadNet;
@property (nonatomic, strong) RKChatView * _Nonnull chatView;
@property (nonatomic, strong) RKBaseTableView * _Nonnull tableView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITextFieldDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end


@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
@end


@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <RKIMDelegate>
- (NSString * _Nonnull)identString SWIFT_WARN_UNUSED_RESULT;
- (void)messageWithDidReceiveSystemMessage:(RKIMMessage * _Nonnull)message;
- (void)messageWithDidReceiveNormalMessage:(RKIMMessage * _Nonnull)message;
- (void)didOpen;
- (void)didFailWithError:(NSError * _Nonnull)error;
- (void)didCloseWithCode:(NSInteger)code reason:(NSString * _Nullable)reason;
@end

@class RKIMUser;
@class RKSDKInfo;
@class RKIMGroup;
@class RKChatInfo;
@class UINavigationController;

SWIFT_CLASS("_TtC8RokidSDK13RKChatManager")
@interface RKChatManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKChatManager * _Nonnull shared;)
+ (RKChatManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKChatManager * _Nonnull)value;
- (void)initIMDB SWIFT_METHOD_FAMILY(none);
- (void)addDataToDB:(NSArray<RKIMUser *> * _Nonnull)model;
- (void)initRKIMSDKInfoWithSdkInfo:(RKSDKInfo * _Nonnull)sdkInfo successBlock:(void (^ _Nonnull)(void))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock SWIFT_METHOD_FAMILY(none);
- (void)getContactList;
- (void)loginOut;
- (void)getGroupListWithSuccessBlock:(void (^ _Nonnull)(NSArray<RKIMGroup *> * _Nonnull))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)createGroupWithChatInfo:(RKChatInfo * _Nonnull)chatInfo successBlock:(void (^ _Nonnull)(NSString * _Nonnull))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)comparelocalData:(NSArray<NSString *> * _Nonnull)userIdlist;
- (void)getGroupMemberInfo:(NSArray<NSString *> * _Nonnull)userList;
- (void)inviteGroupMemberWithGroupId:(NSString * _Nonnull)groupId userList:(NSArray<NSString *> * _Nonnull)userList successBlock:(void (^ _Nonnull)(RKChatInfo * _Nonnull))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)unreadActionWithGroupId:(NSString * _Nonnull)groupId;
- (void)reGroupName;
- (void)remoteAssistance;
- (void)getGroupInfoWithGroupId:(NSString * _Nonnull)groupId successBlock:(void (^ _Nonnull)(RKChatInfo * _Nonnull))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)setStartMeetingStatus;
- (void)dismissGroupWithGroupId:(NSString * _Nonnull)groupId successBlock:(void (^ _Nonnull)(void))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)getAllGroupUnreadMessageCountWithSuccessBlock:(void (^ _Nonnull)(NSInteger))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)saveGroupChatWithServerId:(NSString * _Nonnull)serverId chatInfo:(RKChatInfo * _Nonnull)chatInfo successBlock:(void (^ _Nonnull)(void))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
- (void)startChatWithGroupIdWithGroupId:(NSString * _Nonnull)groupId nav:(UINavigationController * _Nonnull)nav;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class NSData;

@interface RKChatManager (SWIFT_EXTENSION(RokidSDK))
- (void)createTextMessageWithRecieverId:(NSString * _Nullable)recieverId receiveGroupId:(NSString * _Nullable)receiveGroupId text:(NSString * _Nonnull)text;
- (void)createImageMessageWithRecieverId:(NSString * _Nullable)recieverId receiveGroupId:(NSString * _Nullable)receiveGroupId image:(UIImage * _Nonnull)image;
- (void)createVideoMessageWithRecieverId:(NSString * _Nullable)recieverId receiveGroupId:(NSString * _Nullable)receiveGroupId data:(NSData * _Nonnull)data;
- (void)createVoiceMessageWithRecieverId:(NSString * _Nullable)recieverId receiveGroupId:(NSString * _Nullable)receiveGroupId data:(NSData * _Nonnull)data duration:(NSInteger)duration;
- (void)sendMessage:(NSString * _Nonnull)messageString groupId:(NSString * _Nonnull)groupId;
@end


@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <RKIMDelegate>
- (void)didFailWithError:(NSError * _Nonnull)error;
- (void)messageWithDidReceiveSystemMessage:(RKIMMessage * _Nonnull)message;
- (void)messageWithDidReceiveNormalMessage:(RKIMMessage * _Nonnull)message;
- (void)didOpen;
- (void)didCloseWithCode:(NSInteger)code reason:(NSString * _Nullable)reason;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKChatView")
@interface RKChatView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK7RKColor")
@interface RKColor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKContactInfoModel;

SWIFT_CLASS("_TtC8RokidSDK19RKContactGroupModel")
@interface RKContactGroupModel : NSObject
@property (nonatomic) NSInteger onlineAccountNum;
@property (nonatomic, copy) NSString * _Nonnull groupName;
@property (nonatomic, copy) NSArray<RKContactInfoModel *> * _Nonnull contactsList;
@property (nonatomic) NSInteger totalAccountNum;
@property (nonatomic, copy) NSString * _Nonnull groupId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 联系人信息
SWIFT_CLASS("_TtC8RokidSDK18RKContactInfoModel")
@interface RKContactInfoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull username;
@property (nonatomic, copy) NSString * _Nonnull realName;
@property (nonatomic, copy) NSString * _Nonnull licenseCode;
@property (nonatomic, copy) NSString * _Nonnull postName;
@property (nonatomic, copy) NSString * _Nonnull phoneNum;
@property (nonatomic, copy) NSString * _Nonnull companyName;
@property (nonatomic, copy) NSString * _Nonnull headUrl;
@property (nonatomic, copy) NSString * _Nonnull headPortrait;
@property (nonatomic, copy) NSString * _Nonnull unitName;
@property (nonatomic) int64_t licenseEndTime;
@property (nonatomic) NSInteger deviceType;
@property (nonatomic) NSInteger status;
@property (nonatomic) BOOL isSlam;
@property (nonatomic) BOOL selected;
@property (nonatomic, copy) NSString * _Nonnull postCode;
@property (nonatomic, readonly) BOOL isSelf;
/// 是否支持推送
@property (nonatomic, readonly) BOOL isSupportPush;
/// 是否可以呼叫（在线或者支持推送）
@property (nonatomic, readonly) BOOL isAvailable;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKContactListModel")
@interface RKContactListModel : NSObject
@property (nonatomic, copy) NSArray<RKContactInfoModel *> * _Nonnull contactsList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKUserInfo;

SWIFT_CLASS("_TtC8RokidSDK16RKContactManager")
@interface RKContactManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKContactManager * _Nonnull shared;)
+ (RKContactManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKContactManager * _Nonnull)value;
@property (nonatomic, strong) RKUserInfo * _Nonnull _userInfo;
@property (nonatomic, strong) RKUserInfo * _Nonnull userInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKUser;

@interface RKContactManager (SWIFT_EXTENSION(RokidSDK))
- (void)getUserInfo:(RKUser * _Nonnull)user;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC8RokidSDK10RKMaskView")
@interface RKMaskView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKCustomActionView")
@interface RKCustomActionView : RKMaskView
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK6RKFont")
@interface RKFont : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKLandOrientation")
@interface RKLandOrientation : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKLandOrientation * _Nonnull shared;)
+ (RKLandOrientation * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKLandOrientation * _Nonnull)value;
- (void)refreshOritentation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKLineWidthView")
@interface RKLineWidthView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8RokidSDK13RKMeetingInfo")
@interface RKMeetingInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull channelId;
@property (nonatomic, copy) NSString * _Nonnull channelname;
@property (nonatomic, copy) NSString * _Nonnull channelPassword;
@property (nonatomic, copy) NSString * _Nonnull meetingId;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) int64_t startTime;
@property (nonatomic, copy) NSString * _Nonnull resolutionRatio;
@property (nonatomic, copy) NSString * _Nonnull fromUserId;
@property (nonatomic, copy) NSString * _Nonnull serverId;
@property (nonatomic, copy) NSString * _Nonnull oneStreamUserId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class RKUserDevice;

SWIFT_CLASS("_TtC8RokidSDK16RKMeetingManager")
@interface RKMeetingManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKMeetingManager * _Nonnull shared;)
+ (RKMeetingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKMeetingManager * _Nonnull)value;
@property (nonatomic, strong) UIWindow * _Nonnull rkSDKWindow;
@property (nonatomic, strong) UIWindow * _Nullable oldWindow;
@property (nonatomic) BOOL backCamera;
@property (nonatomic) BOOL currentBackCamera;
@property (nonatomic) BOOL cameraSwitch;
@property (nonatomic) BOOL audioSwitch;
@property (nonatomic, strong) RKMeetingInfo * _Nullable meetingInfo;
@property (nonatomic, copy) NSArray<RKUserDevice *> * _Nonnull userDevices;
- (void)removeMeetingMember:(NSString * _Nonnull)userId;
- (void)createMeetingWithMeetingName:(NSString * _Nonnull)meetingName userId:(NSArray<NSString *> * _Nonnull)userId onSuccess:(void (^ _Nonnull)(id _Nullable))onSuccess onFailed:(OnFailed _Nonnull)onFailed;
- (void)addMeetingUsersWithMeetingId:(NSString * _Nullable)meetingId userIdList:(NSArray<NSString *> * _Nonnull)userIdList sessionStatus:(NSInteger)sessionStatus;
- (void)joinMeetingWithChannelId:(NSString * _Nonnull)channelId;
- (void)addMeetingContacts:(NSArray<RKContactInfoModel *> * _Nonnull)meetingContacts;
- (void)inviteUsersWithInfos:(NSArray<RKContactInfoModel *> * _Nonnull)infos;
- (void)getContactlistOnSuccess:(void (^ _Nonnull)(id _Nullable))onSuccess onFailed:(OnFailed _Nonnull)onFailed;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class RKChannelParam;

@interface RKMeetingManager (SWIFT_EXTENSION(RokidSDK)) <RKIncomingCallListener>
- (void)onReceiveCallWithChannelId:(NSString * _Nonnull)channelId fromUserId:(NSString * _Nonnull)fromUserId createTime:(int64_t)createTime channelTitle:(NSString * _Nonnull)channelTitle channelParam:(RKChannelParam * _Nullable)channelParam;
- (void)onCallCanceledWithChannelId:(NSString * _Nonnull)channelId userId:(NSString * _Nonnull)userId;
@end


@interface RKMeetingManager (SWIFT_EXTENSION(RokidSDK))
- (void)userJoinMeetingWithMeetingInfo:(RKMeetingInfo * _Nonnull)meetingInfo onSuccess:(void (^ _Nonnull)(id _Nullable))onSuccess onFailed:(OnFailed _Nonnull)onFailed;
- (void)startMeetingPre;
- (void)startMeetingWithInfos:(NSArray<RKContactInfoModel *> * _Nonnull)infos meetingInfo:(RKMeetingInfo * _Nonnull)meetingInfo;
- (void)answerCallWithChannelId:(NSString * _Nonnull)channelId;
- (void)leaveMeeting;
- (void)createRKSDKWindowWithVc:(UIViewController * _Nonnull)vc;
- (void)showRKSDKWindow;
- (void)hiddenRKSDKWindow;
- (void)addIncomingCallListener;
- (void)sendPushMessageToUserIds:(NSArray<NSString *> * _Nullable)toUserIds;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKMeetingMaskView")
@interface RKMeetingMaskView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8RokidSDK23RKPendingMeetingManager")
@interface RKPendingMeetingManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RKPendingMeetingManager * _Null_unspecified shared;)
+ (RKPendingMeetingManager * _Null_unspecified)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RKPendingMeetingManager (SWIFT_EXTENSION(RokidSDK)) <RKOperationListener>
- (void)onQuery:(NSString * _Nonnull)channelId result:(BOOL)result reason:(enum RKCooperationCode)reason;
@end


SWIFT_CLASS("_TtC8RokidSDK12RKPhotoModel")
@interface RKPhotoModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC8RokidSDK18RKRefreshComponent")
@interface RKRefreshComponent : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)drawRect:(CGRect)rect;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


/// 负责Footer基本配置
SWIFT_CLASS("_TtC8RokidSDK19RKRefreshBaseFooter")
@interface RKRefreshBaseFooter : RKRefreshComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8RokidSDK24RKRefreshAutoStateFooter")
@interface RKRefreshAutoStateFooter : RKRefreshBaseFooter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK22RKRefreshAutoGifFooter")
@interface RKRefreshAutoGifFooter : RKRefreshAutoStateFooter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end






/// 负责Header基本配置
SWIFT_CLASS("_TtC8RokidSDK19RKRefreshBaseHeader")
@interface RKRefreshBaseHeader : RKRefreshComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8RokidSDK18RKRefreshGifHeader")
@interface RKRefreshGifHeader : RKRefreshBaseHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK20RKRefreshStateHeader")
@interface RKRefreshStateHeader : RKRefreshBaseHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK21RKRefreshNormalHeader")
@interface RKRefreshNormalHeader : RKRefreshStateHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC8RokidSDK12RKSDKSetting")
@interface RKSDKSetting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKSDKSetting * _Nonnull shareInstance;)
+ (RKSDKSetting * _Nonnull)shareInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setShareInstance:(RKSDKSetting * _Nonnull)value;
@property (nonatomic, copy) NSString * _Nonnull apiHost;
/// 会议模式
@property (nonatomic) RKMeetingMode mod;
/// IM URL
@property (nonatomic, copy) NSString * _Nonnull imURL;
/// socketURL
@property (nonatomic, copy) NSString * _Nonnull socketURL;
/// SDK需要的基本信息
@property (nonatomic, strong) RKSDKInfo * _Nullable sdkInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKSDKUserCenter")
@interface RKSDKUserCenter : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKSDKUserCenter * _Nonnull shared;)
+ (RKSDKUserCenter * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKSDKUserCenter * _Nonnull)value;
/// 用户角色 1:技师，2:专家  默认专家
@property (nonatomic) NSInteger userRole;
@property (nonatomic, strong) RKUserInfo * _Nonnull userInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK7RKToast")
@interface RKToast : RKMaskView
@end


SWIFT_CLASS("_TtC8RokidSDK10RKUserInfo")
@interface RKUserInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull postCode;
@property (nonatomic, copy) NSString * _Nonnull license;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK16RKVideoCtrHelper")
@interface RKVideoCtrHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK11SCNTextNode")
@interface SCNTextNode : SCNNode
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8RokidSDK2UI")
@interface UI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIDevice (SWIFT_EXTENSION(RokidSDK))
+ (void)rkDeviceNewOrientation:(UIInterfaceOrientationMask)interfaceOrientation;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
